from matplotlib import pyplot as plt
from bs4 import BeautifulSoup
import requests
import numpy as np

def fetch_html_tables(url):
    "Returns a list of tables in the html of url"
    page = requests.get(url)
    bs=BeautifulSoup(page.content)
    tables=bs.find_all('table')
    return tables

tables=fetch_html_tables('https://www.altomfotball.no/element.do?cmd=tournamentTable&tournamentId=239&seasonId=341&useFullUrl=false')
table_html=tables[0]

#printing top
print(str(table_html)[:1000])


def html_to_table(html):
    "Returns the table defined in html as a list"
    #defining the table:
    table=[]
    #iterating over all rows
    for row in html.find_all('tr'):
        r=[]
        #finding all cells in each row:
        cells=row.find_all('td')
        
        #if no cells are found, look for headings
        if len(cells)==0:
            cells=row.find_all('th')
            
        #iterate over cells:
        for cell in cells:
            cell=format(cell)
            r.append(cell)
        
        #append the row to t:
        table.append(r)
    return table

def format(cell):
    "Returns a string after converting bs4 object cell to clean text"
    if cell.content is None:
        s=cell.text
    elif len(cell.content)==0:
        return ''
    else:
        s=' '.join([str(c) for c in cell.content])
        
    #here you can add additional characters/strings you want to 
    #remove, change punctuations or format the string in other
    #ways:
    s=s.replace('\xa0','')
    s=s.replace('\n','')
    return s

table=html_to_table(table_html)

#printing top
print(str(table)[:1000])

def save_data(file_name,table):
    "Saves table to file_name"
    f=open(file_name,'w')
    for row in table:
        f.write(';'.join(row)+'\n')
    f.close()
    
save_data('bundesliga.csv',table)

import pandas as pd
g = pd.read_csv('bundesliga.csv', delimiter=';', encoding='latin1')

g

from matplotlib import pyplot as plt

fig,ax=plt.subplots()

#adding axis lables:
ax.set_ylabel('Seier')
ax.set_xlabel('M책l')

#plotting the function:
ax.scatter(g['+'], g['V'],  label='Antallkamper')
ax.legend(loc='lower right',frameon=False)

y=g['V']
pd.DataFrame(y)

x=pd.DataFrame(np.log(g['+']))
x['intercept']=1
x

from statsmodels.regression.linear_model import OLS

res=OLS(y,x).fit()

print(res.summary())

res.params

fig,ax=plt.subplots()

x=np.linspace(min(np.log(g['V'])), max(np.log(g['+'])), 50)


regression_line=res.params['intercept']+res.params['+']*x


ax.plot(x, regression_line,color='red')

#adding axis lables:
ax.set_ylabel('Seier')
ax.set_xlabel('M책l')



#plotting the function:
ax.scatter(np.log(g['+']), g['V'],  label='Observasjoner')
ax.legend(loc='lower right',frameon=False)

#gjort en regrisjonsanalyse av m책l/seier og vi ser at det er en korelasjon mellom antall m책l og kamper vunnet,ikke alltid men som oftest
